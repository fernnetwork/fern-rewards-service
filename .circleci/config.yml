version: 2

references:
  container_config: &container_config
    docker:
      - image: circleci/node:9
    working_directory: ~/workspace
    
  workspace_root: &workspace_root
    ~/workspace

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo

restore_node_modules: &restore_node_modules
    restore_cache:
      keys:
        - v1-dependencies-{{ checksum "package.json" }}
        - v1-dependencies-

jobs:
  build_and_test:
    <<: *container_config
    steps:
      - checkout
      - save_cache:
          paths:
            - .
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Authorize NPM
          command: echo "//registry.npmjs.org/:_authToken=$PRIVATE_NPM_TOKEN" > ~/.npmrc
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Run ESLint
          command: npm run lint:ci
      - store_artifacts:
          path: reports/junit
      - run:
          name: Install solidity
          command: wget https://github.com/ethereum/solidity/releases/download/v0.4.21/solc-static-linux && chmod +x solc-static-linux && sudo mv solc-static-linux /usr/bin/solc
      - run:
          name: Run Tests
          command: npm run test:ci
      - store_test_results:
          path: reports/junit
      
  build_docker:
    <<: *container_config
    steps:
      - *attach_workspace
      - *restore_repo
      - *restore_node_modules
      - setup_remote_docker
      - run:
          name: Docker login
          command: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin
      - run:
          name: Build docker image
          command: |
            docker build -t fernnetwork/$CIRCLE_PROJECT_REPONAME . --build-arg="NPM_TOKEN=$PRIVATE_NPM_TOKEN"
            docker tag fernnetwork/$CIRCLE_PROJECT_REPONAME fernnetwork/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1
      - run:
          name: Push docker image
          command: docker push fernnetwork/$CIRCLE_PROJECT_REPONAME

  deploy_dev:
    <<: *container_config
    steps:
      - *attach_workspace
      - *restore_repo
      - *restore_node_modules
          
      - run:
          name: Deploy contract & reward service
          environment:
            - DOCKER_CERT_PATH: ./certs
            - DOCKER_TLS_VERIFY: 1
          command: |
            export DOCKER_HOST=tcp://${DEV_TARGET_HOST}:2376

            mkdir -p $DOCKER_CERT_PATH
            echo $DOCKER_SOCK_CERT_B64 | base64 --decode > $DOCKER_CERT_PATH/cert.pem
            echo $DOCKER_SOCK_KEY_B64 | base64 --decode > $DOCKER_CERT_PATH/key.pem
            echo $DOCKER_SOCK_CA_B64 | base64 --decode > $DOCKER_CERT_PATH/ca.pem
            DOCKER_OPTS="-H ${DEV_TARGET_HOST}:2376 --tlsverify --tlscacert $DOCKER_CERT_PATH/ca.pem --tlscert $DOCKER_CERT_PATH/cert.pem --tlskey $DOCKER_CERT_PATH/key.pem"
            echo "Running docker commands on remote server with opts $DOCKER_OPTS"

            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin

            # Stop all containers
            docker $DOCKER_OPTS stop $(docker ps -aq --filter name=$CIRCLE_PROJECT_REPONAME) || true
            docker $DOCKER_OPTS rm $(docker ps -aq --filter name=$CIRCLE_PROJECT_REPONAME) || true

            # Pull latest image
            docker $DOCKER_OPTS pull fernnetwork/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1 

            # Run reward agent on all hosts
            for HOST_NUM in 1 2 3
            do
              ENV_VAR_PREFIX=DEV_HOST${HOST_NUM}
              
              VAR_PARITY_WS=${ENV_VAR_PREFIX}_PARITY_WS
              VAR_AUTHORITY_ADDRESS=${ENV_VAR_PREFIX}_AUTHORITY_ADDRESS
              VAR_REWARD_INTERVAL_SECONDS=${ENV_VAR_PREFIX}_REWARD_INTERVAL_SECONDS
              VAR_REWARD_CONTRACT_ADDRESS=${ENV_VAR_PREFIX}_REWARD_CONTRACT_ADDRESS
              VAR_STORAGE_CONTRACT_ADDRESS=${ENV_VAR_PREFIX}_STORAGE_CONTRACT_ADDRESS
              
              CONTAINER_NAME=${CIRCLE_PROJECT_REPONAME}-${HOST_NUM}
              docker $DOCKER_OPTS run -d --name $CONTAINER_NAME \
                -e PARITY_WS=${!VAR_PARITY_WS} \
                -e AUTHORITY_ADDRESS=${!VAR_AUTHORITY_ADDRESS} \
                -e REWARD_INTERVAL_SECONDS=${!VAR_REWARD_INTERVAL_SECONDS} \
                -e REWARD_CONTRACT_ADDRESS=${!VAR_REWARD_CONTRACT_ADDRESS} \
                -e STORAGE_CONTRACT_ADDRESS=${!VAR_STORAGE_CONTRACT_ADDRESS} \
                fernnetwork/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1
            done

workflows:
  version: 2
  main:
    jobs:
      - build_and_test:
          context: org-global
      - build_docker:
          context: org-global
          requires: 
            - build_and_test
          filters:
            branches:
              only:
               - master
      - deploy_dev:
          context: fern
          requires:
            - build_docker
          filters:
            branches:
              only:
               - master
